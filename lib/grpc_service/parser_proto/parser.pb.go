// Code generated by protoc-gen-go. DO NOT EDIT.
// source: parser.proto

package parser

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//客户端发送给服务端
type DownReq struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Kind                 string   `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
	Field                string   `protobuf:"bytes,4,opt,name=field,proto3" json:"field,omitempty"`
	Val                  string   `protobuf:"bytes,5,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownReq) Reset()         { *m = DownReq{} }
func (m *DownReq) String() string { return proto.CompactTextString(m) }
func (*DownReq) ProtoMessage()    {}
func (*DownReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_128ea0fcf29414eb, []int{0}
}

func (m *DownReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownReq.Unmarshal(m, b)
}
func (m *DownReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownReq.Marshal(b, m, deterministic)
}
func (m *DownReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownReq.Merge(m, src)
}
func (m *DownReq) XXX_Size() int {
	return xxx_messageInfo_DownReq.Size(m)
}
func (m *DownReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DownReq.DiscardUnknown(m)
}

var xxx_messageInfo_DownReq proto.InternalMessageInfo

func (m *DownReq) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *DownReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DownReq) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *DownReq) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *DownReq) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

//服务端返回给客户端
type DownRsp struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Payload              []byte   `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Err                  string   `protobuf:"bytes,4,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownRsp) Reset()         { *m = DownRsp{} }
func (m *DownRsp) String() string { return proto.CompactTextString(m) }
func (*DownRsp) ProtoMessage()    {}
func (*DownRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_128ea0fcf29414eb, []int{1}
}

func (m *DownRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownRsp.Unmarshal(m, b)
}
func (m *DownRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownRsp.Marshal(b, m, deterministic)
}
func (m *DownRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownRsp.Merge(m, src)
}
func (m *DownRsp) XXX_Size() int {
	return xxx_messageInfo_DownRsp.Size(m)
}
func (m *DownRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_DownRsp.DiscardUnknown(m)
}

var xxx_messageInfo_DownRsp proto.InternalMessageInfo

func (m *DownRsp) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *DownRsp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DownRsp) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *DownRsp) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

//客户端发送给服务端
type UpReq struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Payload              []byte   `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Retain               string   `protobuf:"bytes,4,opt,name=retain,proto3" json:"retain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpReq) Reset()         { *m = UpReq{} }
func (m *UpReq) String() string { return proto.CompactTextString(m) }
func (*UpReq) ProtoMessage()    {}
func (*UpReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_128ea0fcf29414eb, []int{2}
}

func (m *UpReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpReq.Unmarshal(m, b)
}
func (m *UpReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpReq.Marshal(b, m, deterministic)
}
func (m *UpReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpReq.Merge(m, src)
}
func (m *UpReq) XXX_Size() int {
	return xxx_messageInfo_UpReq.Size(m)
}
func (m *UpReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpReq proto.InternalMessageInfo

func (m *UpReq) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *UpReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpReq) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *UpReq) GetRetain() string {
	if m != nil {
		return m.Retain
	}
	return ""
}

//服务端返回给客户端
type UpRsp struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Kind                 string   `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
	Field                string   `protobuf:"bytes,4,opt,name=field,proto3" json:"field,omitempty"`
	Val                  string   `protobuf:"bytes,5,opt,name=val,proto3" json:"val,omitempty"`
	Err                  string   `protobuf:"bytes,6,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpRsp) Reset()         { *m = UpRsp{} }
func (m *UpRsp) String() string { return proto.CompactTextString(m) }
func (*UpRsp) ProtoMessage()    {}
func (*UpRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_128ea0fcf29414eb, []int{3}
}

func (m *UpRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpRsp.Unmarshal(m, b)
}
func (m *UpRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpRsp.Marshal(b, m, deterministic)
}
func (m *UpRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpRsp.Merge(m, src)
}
func (m *UpRsp) XXX_Size() int {
	return xxx_messageInfo_UpRsp.Size(m)
}
func (m *UpRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpRsp.DiscardUnknown(m)
}

var xxx_messageInfo_UpRsp proto.InternalMessageInfo

func (m *UpRsp) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *UpRsp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpRsp) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *UpRsp) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *UpRsp) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

func (m *UpRsp) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*DownReq)(nil), "parser.DownReq")
	proto.RegisterType((*DownRsp)(nil), "parser.DownRsp")
	proto.RegisterType((*UpReq)(nil), "parser.UpReq")
	proto.RegisterType((*UpRsp)(nil), "parser.UpRsp")
}

func init() { proto.RegisterFile("parser.proto", fileDescriptor_128ea0fcf29414eb) }

var fileDescriptor_128ea0fcf29414eb = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x48, 0x2c, 0x2a,
	0x4e, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0x32, 0xb9, 0xd8,
	0x5d, 0xf2, 0xcb, 0xf3, 0x82, 0x52, 0x0b, 0x85, 0xf8, 0xb8, 0x98, 0x3c, 0x5d, 0x24, 0x18, 0x15,
	0x18, 0x35, 0x38, 0x83, 0x98, 0x3c, 0x5d, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25,
	0x98, 0xc0, 0x22, 0x60, 0x36, 0x48, 0x2c, 0x3b, 0x33, 0x2f, 0x45, 0x82, 0x19, 0x22, 0x06, 0x62,
	0x0b, 0x89, 0x70, 0xb1, 0xa6, 0x65, 0xa6, 0xe6, 0xa4, 0x48, 0xb0, 0x80, 0x05, 0x21, 0x1c, 0x21,
	0x01, 0x2e, 0xe6, 0xb2, 0xc4, 0x1c, 0x09, 0x56, 0xb0, 0x18, 0x88, 0xa9, 0x14, 0x09, 0xb5, 0xaa,
	0xb8, 0x80, 0x28, 0xab, 0x24, 0xb8, 0xd8, 0x0b, 0x12, 0x2b, 0x73, 0xf2, 0x13, 0x21, 0xb6, 0xf1,
	0x04, 0xc1, 0xb8, 0x20, 0xa3, 0x53, 0x8b, 0x8a, 0xa0, 0xd6, 0x81, 0x98, 0x4a, 0xb1, 0x5c, 0xac,
	0xa1, 0x05, 0xc4, 0xfa, 0x01, 0xb7, 0xc1, 0x62, 0x5c, 0x6c, 0x45, 0xa9, 0x25, 0x89, 0x99, 0x79,
	0x50, 0xb3, 0xa1, 0x3c, 0xa5, 0x4a, 0xb0, 0xf1, 0x44, 0xba, 0x9b, 0x82, 0x20, 0x82, 0xf9, 0x8c,
	0x0d, 0xee, 0x33, 0xa3, 0x14, 0x2e, 0xb6, 0x00, 0x70, 0x4c, 0x09, 0xe9, 0x72, 0xb1, 0xfb, 0x26,
	0x16, 0x15, 0x67, 0x24, 0xe6, 0x08, 0xf1, 0xeb, 0x41, 0xe3, 0x12, 0x1a, 0x75, 0x52, 0xa8, 0x02,
	0xc5, 0x05, 0x4a, 0x0c, 0x42, 0xda, 0x5c, 0x9c, 0xa1, 0x79, 0x30, 0x0d, 0xbc, 0x30, 0x79, 0x70,
	0x28, 0x49, 0x21, 0x73, 0x41, 0x8a, 0x93, 0xd8, 0xc0, 0x89, 0xc2, 0x18, 0x10, 0x00, 0x00, 0xff,
	0xff, 0x08, 0x4f, 0xc9, 0x91, 0x24, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ParserClient is the client API for Parser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ParserClient interface {
	// 下行解析器：序列化要下发的应用层数据
	Marshal(ctx context.Context, in *DownReq, opts ...grpc.CallOption) (*DownRsp, error)
	//上行解析器：反序列化上行的数据为应用层数据
	UnMarshal(ctx context.Context, in *UpReq, opts ...grpc.CallOption) (*UpRsp, error)
}

type parserClient struct {
	cc *grpc.ClientConn
}

func NewParserClient(cc *grpc.ClientConn) ParserClient {
	return &parserClient{cc}
}

func (c *parserClient) Marshal(ctx context.Context, in *DownReq, opts ...grpc.CallOption) (*DownRsp, error) {
	out := new(DownRsp)
	err := c.cc.Invoke(ctx, "/parser.Parser/Marshal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *parserClient) UnMarshal(ctx context.Context, in *UpReq, opts ...grpc.CallOption) (*UpRsp, error) {
	out := new(UpRsp)
	err := c.cc.Invoke(ctx, "/parser.Parser/UnMarshal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ParserServer is the server API for Parser service.
type ParserServer interface {
	// 下行解析器：序列化要下发的应用层数据
	Marshal(context.Context, *DownReq) (*DownRsp, error)
	//上行解析器：反序列化上行的数据为应用层数据
	UnMarshal(context.Context, *UpReq) (*UpRsp, error)
}

// UnimplementedParserServer can be embedded to have forward compatible implementations.
type UnimplementedParserServer struct {
}

func (*UnimplementedParserServer) Marshal(ctx context.Context, req *DownReq) (*DownRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Marshal not implemented")
}
func (*UnimplementedParserServer) UnMarshal(ctx context.Context, req *UpReq) (*UpRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnMarshal not implemented")
}

func RegisterParserServer(s *grpc.Server, srv ParserServer) {
	s.RegisterService(&_Parser_serviceDesc, srv)
}

func _Parser_Marshal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParserServer).Marshal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parser.Parser/Marshal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParserServer).Marshal(ctx, req.(*DownReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Parser_UnMarshal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParserServer).UnMarshal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/parser.Parser/UnMarshal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParserServer).UnMarshal(ctx, req.(*UpReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Parser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "parser.Parser",
	HandlerType: (*ParserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Marshal",
			Handler:    _Parser_Marshal_Handler,
		},
		{
			MethodName: "UnMarshal",
			Handler:    _Parser_UnMarshal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "parser.proto",
}
